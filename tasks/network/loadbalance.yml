#- name: "network.loadbalance.healtcheck: Ensure state of healthcheck [ {{ cloud_network_loadbalance.healthcheck.name }} ]"
#  gcp_healthcheck:
#    healthcheck_name: "{{ cloud_network_loadbalance.healthcheck.name }}"
#    healthcheck_type: "{{ cloud_network_loadbalance.healthcheck.type }}"
#    request_path: "{{ cloud_network_loadbalance.healthcheck.url | default(omit) }}"
#    check_interval:  "{{ cloud_network_loadbalance.healthcheck.interval | default(omit) }}"
#    timeout: "{{ cloud_network_loadbalance.healthcheck.timeout | default(omit) }}"
#    unhealthy_threshold: "{{ cloud_network_loadbalance.healthcheck.threshold | default(omit) }}"
#    healthy_threshold: "{{ cloud_network_loadbalance.healthcheck.threshold | default(omit) }}"
#    state: "{{ cloud_network_loadbalance.healthcheck.state | default(omit) }}"

- set_fact:
    cloud_network_loadbalance_members: []

- name: "cloud.network.loadbalance.members: Create list of region/members"
  set_fact:
    cloud_network_loadbalance_members: "{{ cloud_network_loadbalance_members }} + [ '{{ _cloud.provider.zone }}/{{ cloud_network_loadbalance_member }}' ]"
  loop: "{{ cloud_network_loadbalance.members }}"
  loop_control:
    loop_var: cloud_network_loadbalance_member
    label: "{{ cloud_network_loadbalance_member }}"

- name: "cloud.network.loadbalance: Ensure presence of loadbalance [ {{ cloud_network_loadbalance.name }} ]"
  gce_lb:
    name: "{{ cloud_network_loadbalance.name }}"
    region: "{{ _cloud.provider.region }}"
    external_ip: "{{ cloud_network_loadbalance.public | default(omit) }}"
    port_range: "{{ cloud_network_loadbalance.port | default(omit) }}"
    protocol: "{{ cloud_network_loadbalance.protocol | default(omit) }}"
    members: "{{ cloud_network_loadbalance_members }}"
    httphealthcheck_name: "{{ cloud_network_loadbalance.healthcheck.name }}"
    httphealthcheck_path: "{{ cloud_network_loadbalance.healthcheck.url }}"
    httphealthcheck_port: "{{ cloud_network_loadbalance.healthcheck.port }}"
    state: "{{ cloud_network_loadbalance_members.state | default('present') }}"
